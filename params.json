{"name":"Docker-archlinux-ssh-hpn","tagline":"Docker Arch Linux High Performance SSH/SCP - HPN-SSH Client / Server Container","body":"# archlinux-ssh-hpn\r\n\r\nOn Docker hub [archlinux-small-ssh-hpn](https://registry.hub.docker.com/u/yantis/archlinux-small-ssh-hpn/)\r\non Github [docker-archlinux-ssh-hpn](https://github.com/yantis/docker-archlinux-ssh-hpn)\r\n\r\n[High Performance SSH/SCP - HPN-SSH](http://www.psc.edu/index.php/hpn-ssh)\r\nOpenSSH_6.8p1-hpn14v5, OpenSSL 1.0.2a 19 Mar 2015\r\n\r\nThis small layer adds 6MB to the [archlinux-small]\r\n(https://registry.hub.docker.com/u/yantis/archlinux-small/) layer.\r\n\r\nThis is both the server and the client. With the default being the server running as an [S6 service]\r\n(http://skarnet.org/software/s6/index.html)\r\n\r\nThere are some nice speedup improvements to this. One of the nice features of this is the NONE cipher\r\nfor when there isn't at TTY allocated. ie: SCP. (authentication is still encrypted but your data \r\nisn't. So keep that in mind (ie: It is fine for images and video but not OK for your bitcoin wallet).\r\n\r\nOn the client you would use it as:\r\nssh user@hostname oNoneEnabled=true -oNoneSwitch=yes\r\n\r\nYou can also use one of the multithread ciphers for when a TTY is allocated like:\r\nssh user@hostname -oCipher=aes128-ctr\r\n\r\n\r\n### Docker Images Structure\r\n>[yantis/archlinux-tiny](https://github.com/yantis/docker-archlinux-tiny)\r\n>>[yantis/archlinux-small](https://github.com/yantis/docker-archlinux-small)\r\n>>>[yantis/archlinux-small-ssh-hpn](https://github.com/yantis/docker-archlinux-ssh-hpn)\r\n>>>>[yantis/ssh-hpn-x](https://github.com/yantis/docker-ssh-hpn-x)\r\n>>>>>[yantis/dynamic-video](https://github.com/yantis/docker-dynamic-video)\r\n>>>>>>[yantis/virtualgl](https://github.com/yantis/docker-virtualgl)\r\n>>>>>>>[yantis/wine](https://github.com/yantis/docker-wine)\r\n\r\n\r\n## Server\r\n\r\nThe server follows these docker conventions:\r\n\r\n* `-it` will run an interactive session that can be terminated with CTRL+C.\r\n* `--rm` will run a temporary session that will make sure to remove the container on exit.\r\n* `-v $HOME/.ssh/authorized_keys:/authorized_keys:ro` (optionally provide your keys authorized keys)\r\n* `-p 49158:22` port to map to port 22.\r\n\r\nIf you have authorized public keys it will use them for both the root/docker users. I like using it\r\nthis way for example if I throw this up on AWS and I just use the same keys both both the primary\r\nsshd server and the docker containers.\r\n\r\nIf you pass it keys it will disable password logging in. If you don't pass it authorized keys it\r\nwill enable the login via password.\r\nThe default user/password is docker/docker\r\n\r\n```bash\r\ndocker run \\\r\n           -ti \\\r\n           --rm \\\r\n           -v $HOME/.ssh/authorized_keys:/authorized_keys:ro \\\r\n           -h docker \\\r\n           -p 49158:22 \\\r\n           yantis/archlinux-small-ssh-hpn\r\n```\r\n\r\n\r\n## Client\r\n\r\nTo use the client you can just run it as so to get a shell (or /bin/bash if you prefer)\r\n\r\n```bash\r\ndocker run -ti --rm yantis/archlinux-small-ssh-hpn /bin/zsh\r\n```\r\n\r\nThis example uploads a file to your server.\r\n\r\n```bash\r\ndocker run -ti --rm -v ~/Downloads:/Downloads yantis/archlinux-small-ssh-hpn scp -P 49158 -oNoneEnabled=true -oNoneSwitch=yes /Downloads/alpine-3.1.3-x86_64.iso docker@monster:~/ \r\n```\r\n\r\nThis example uses a private key to connect to your server and runs xeyes.\r\n\r\n```bash\r\nxhost +si:localuser:$(whoami) >/dev/null\r\n\r\ndocker run \\\r\n           -ti \\\r\n           --rm \\\r\n           -e DISPLAY \\\r\n           -v /tmp/.X11-unix:/tmp/.X11-unix:ro \\\r\n           -v ~/.ssh/privatekey.pem:/home/docker/.ssh/privatekey.pem:ro \\\r\n           -u docker \\\r\n           yantis/archlinux-small-ssh-hpn ssh -X -i /home/docker/.ssh/privatekey.pem docker@yourserver -p 49158 -t xeyes\r\n```\r\n\r\nIf you look at the below screenshot I ran three tests. First one is normal, second one is the NONE\r\ncipher and the third one was normal to show no caching was going on.\r\nThe NONE cipher was twice as fast.\r\n![](http://yantis-scripts.s3.amazonaws.com/screenshot_20150408-053726.jpg)\r\n\r\nIf you have AWS and If this is something you want to play with check out the [launch.sh](https://github.com/yantis/docker-archlinux-ssh-hpn/blob/master/launch.sh)\r\nscript on github. It will create a new AWS ec2 instance, install docker and launch the container then log you in. It should work with the AWS free tier.\r\n","google":"UA-61848149-1","note":"Don't delete this file! It's used internally to help with page regeneration."}